<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLogIn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhXgBeAIcAAP///zgwMPDAiEiw4IDI8P/AKHjI8Oi4gHDA6OCoeOiwgGC46NigcP+4KFi46OCw
        eOi4iGjA6P/IKNCYaPDIkFiw4JA4AECo4MiQYChwoBhomPj4+P/QKOCoUP/geIgwAKBQGOCYKP/gKP/Y
        aNioeP/ggJhIELh4QKBAAKhgKP/IIP/oiMiYaLjQ4Lh4GDB4qHioyLiAUMCIYOiYANCIIP/YKP/wuCBo
        mJhICCig2P/AGOjYyDg4OP/oKCAoKCAgIBBgmCgoMDiw8P/4yICAgOCocDCIuLiIWDCg2P/okP/40Khg
        EBgYGMCQaDiQwODIsCh4qNi4oJhAAEhISPDo4GBgYLh4SPjw8Gi46Dio4Pjw6PjoqOjQwMCggFCYuP/Q
        mJh4YEio4EiIsMCIGP//+PjAiNCYYP/omDiAqDig2KCgoOjIqNjo8P/4qP/YWKBQCDiYyMiYcCCg2Pjw
        yP/wKDCAqGCw2Pjw2EiYyLCAWEhAOFC46NiocCgoKP/IGLiAWIjI8LBYCGCgwMiIIFiYuCgwMP/4+DiA
        sKBgIP/ogP//KP/IkMiIWP/YYJBACPjgoP/IMECo2MCIWP//2P/4KPj//9Dg6ECw6Ojo6PC4gOiweP/g
        iBBomNigaACg4JhIAJhAEIDQ+P/42ODAoP/AIGjA8OCYMODg4NCYcP/gwDio2PjIkP//4Eiw6PC4iP/A
        YHjA8Dg4MIg4ANigeOigAICgwP/gYFi44P+gIFiw6MDg4OCgYP//oAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAAXgBeAAAI/wABCBxIsKBBgRsIqqkyZQoPHgEi
        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
</value>
  </data>
</root>